package:
  name: cookiecutter
  version: "1.5.1"

source:
  fn: cookiecutter-1.5.1.tar.gz
  url: https://pypi.python.org/packages/97/ed/8f0b6f36c119e5083fb789ffa7c1169d98b15d5b3123b105207e46fb9026/cookiecutter-1.5.1.tar.gz
  md5: efdf7d3d971a68ffc5f01b328394c726
#  patches:
   # List any patch files here
   # - fix.patch

build:
  # noarch: python
  # preserve_egg_dir: True
  entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - cookiecutter = cookiecutter:main
    #
    # Would create an entry point called cookiecutter that calls cookiecutter.main()

    - cookiecutter = cookiecutter.__main__:main

  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:
  build:
    - python
    - setuptools
    - future >=0.15.2
    - binaryornot >=0.2.0
    - jinja2 >=2.7
    - click >=5.0
    - whichcraft >=0.4.0
    - poyo >=0.1.0
    - jinja2-time >=0.1.0

  run:
    - python
    - future >=0.15.2
    - binaryornot >=0.2.0
    - jinja2 >=2.7
    - click >=5.0
    - whichcraft >=0.4.0
    - poyo >=0.1.0
    - jinja2-time >=0.1.0

test:
  # Python imports
  imports:
    - cookiecutter

  commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.

    - cookiecutter --help

  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  # requires:
    # Put any additional test requirements here.  For example
    # - nose

about:
  home: https://github.com/audreyr/cookiecutter
  license: BSD License
  summary: 'A command-line utility that creates projects from project templates, e.g. creating a Python package project from a Python package project template.'
  license_family: BSD

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
